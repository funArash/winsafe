window.SIDEBAR_ITEMS = {"enum":[["Brush","The class background brush to be loaded for `WindowMainOpts`, `WindowModalOpts` or `WindowControlOpts`."],["CheckState","Possible states of a `CheckBox` control."],["Cursor","The class cursor to be loaded for `WindowMainOpts`, `WindowModalOpts` or `WindowControlOpts`."],["Horz","Specifies the horizontal behavior of the control when the parent window is resized."],["Icon","The class icon to be loaded for `WindowMainOpts`, `WindowModalOpts` or `WindowControlOpts`."],["StatusBarPart","Used when adding the parts in `StatusBar::new`."],["Vert","Specifies the vertical behavior of the control when the parent window is resized."]],"mod":[["events","Events exposed by windows and controls, which allow the handling of native Windows messages."],["spec","Structs which expose specialized methods of controls."]],"struct":[["Button","Native button control."],["ButtonOpts","Options to create a `Button` programmatically with `Button::new`."],["CheckBox","Native check box control, actually a variation of the ordinary `Button`: just a button with a specific style."],["CheckBoxOpts","Options to create a `CheckBox` programmatically with `CheckBox::new`."],["ComboBox","Native combo box control."],["ComboBoxOpts","Options to create a `ComboBox` programmatically with `ComboBox::new`."],["DateTimePicker","Native date and time picker control."],["DateTimePickerOpts","Options to create a `DateTimePicker` programmatically with `DateTimePicker::new`."],["Edit","Native edit control."],["EditOpts","Options to create an `Edit` programmatically with `Edit::new`."],["Label","Native label control."],["LabelOpts","Options to create a `Label` programmatically with `label::new`."],["ListBox","Native list box control. Not to be confused with the more complex list view control."],["ListBoxOpts","Options to create a `ListBox` programmatically with `ListBox::new`."],["ListView","Native list view control. Not to be confused with the simpler list box control."],["ListViewOpts","Options to create a `ListView` programmatically with `ListView::new`."],["MonthCalendar","Native month calendar control."],["MonthCalendarOpts","Options to create a `MonthCalendar` programmatically with `MonthCalendar::new`."],["MsgError","An error that occurred within a closure of a window message handling. Usually these errors are thrown by the user closures."],["ProgressBar","Native progress bar control."],["ProgressBarOpts","Options to create a `ProgressBar` programmatically with `ProgressBar::new`."],["RadioButton","Native radio button control."],["RadioButtonOpts","Options to create a `RadioButton` programmatically with `RadioGroup::new`."],["RadioGroup","A group of native `RadioButton` controls."],["StatusBar","Native status bar control, which has one or more parts."],["Trackbar","Native trackbar control."],["TrackbarOpts","Options to create a `Trackbar` programmatically with `Trackbar::new`."],["TreeView","Native tree view control."],["TreeViewOpts","Options to create a `TreeView` programmatically with `TreeView::new`."],["WindowControl","An user child window, which can handle events. Can be programmatically created or load a dialog resource from a `.res` file."],["WindowControlOpts","Options to create a `WindowControl` programmatically with `WindowControl::new`."],["WindowMain","An user main window, which can handle events. Usually, this is the first window of your application, launched directly from the `main` function. Can be programmatically created or load a dialog resource from a `.res` file."],["WindowMainOpts","Options to create a `WindowMain` programmatically with `WindowMain::new`."],["WindowModal","An user modal window, which can handle events. Can be programmatically created or load a dialog resource from a `.res` file."],["WindowModalOpts","Options to create a `WindowModal` programmatically with `WindowModal::new`."]],"type":[["MsgResult","A `Result` alias for errors from window message handling, which returns a `MsgError` on failure."]]};